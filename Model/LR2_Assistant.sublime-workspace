{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Player",
				"PlayerData"
			],
			[
				"dd",
				"dDJName"
			],
			[
				"pPlayer",
				"pPlayerCntFromIRSite"
			],
			[
				"pClearS",
				"pClearStatusBeginStr"
			],
			[
				"mClear",
				"mClearData"
			],
			[
				"dDj",
				"dDJName"
			],
			[
				"pGet",
				"pGetPlayerCnt"
			],
			[
				"getPlay",
				"getPlayerCntStr"
			],
			[
				"pRead",
				"pReadLineIRSite"
			],
			[
				"show",
				"Show"
			],
			[
				"no",
				"noteOP"
			],
			[
				"td",
				"tdE"
			],
			[
				"tr",
				"trS"
			],
			[
				"hard",
				"hardClearRate"
			],
			[
				"Music",
				"MusicClearStatus"
			],
			[
				"getM",
				"getMusicClearStatus"
			],
			[
				"getm",
				"getMusicClearStatus"
			],
			[
				"ret",
				"ret"
			],
			[
				"a",
				"append"
			],
			[
				"get",
				"getVarMName"
			],
			[
				"pMusi",
				"pMusicDataFromTsv"
			],
			[
				"pMusicDataFromTs",
				"pMusicDataFromTsvs"
			],
			[
				"pMu",
				"pMusicDataFromTsv"
			],
			[
				"readF",
				"readFilePath"
			],
			[
				"writeF",
				"writeFileName"
			],
			[
				"main",
				"mainDataFieldStartStr"
			],
			[
				"headerFile",
				"headerFieldStartStr"
			],
			[
				"str",
				"String"
			],
			[
				"convKey",
				"convKeyLaneListToMainDataField"
			],
			[
				"objs",
				"objsData"
			],
			[
				"to",
				"toList	Map k a -> [(k, a)]"
			],
			[
				"Sin",
				"singleton	Char -> Text"
			],
			[
				"Main",
				"MainDataField	"
			],
			[
				"r",
				"rhythm2"
			],
			[
				"rh",
				"rhythm1"
			],
			[
				"kInfo",
				"kInfo1"
			],
			[
				"Bar",
				"BarContents	"
			],
			[
				"div",
				"divNotesData"
			],
			[
				"No",
				"NotesData"
			],
			[
				"obj",
				"objsData"
			],
			[
				"en",
				"encodeString	String -> String"
			],
			[
				"pLe",
				"pLevelHtmlTag"
			],
			[
				"p",
				"pLevel"
			],
			[
				"do",
				"do"
			],
			[
				"or",
				"orgArtistURL"
			],
			[
				"takew",
				"takeWhile	(Char -> Bool) -> Parser ByteString"
			],
			[
				"cha",
				"Char8"
			],
			[
				"M",
				"MusicData	"
			],
			[
				"mu",
				"musicData"
			],
			[
				"sea",
				"searchMusicDefStart"
			],
			[
				"Ht",
				"HTML	(module)"
			],
			[
				"load",
				"Loading"
			]
		]
	},
	"buffers":
	[
		{
			"file": "FromHPtoSSPtData.hs",
			"settings":
			{
				"buffer_size": 3278,
				"line_ending": "Windows"
			}
		},
		{
			"file": "MusicDataParser.hs",
			"settings":
			{
				"buffer_size": 17856,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Haskell/Haskell.sublime-build",
	"command_palette":
	{
		"height": 104.0,
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"repl haskel",
				"SublimeREPL: Haskell"
			],
			[
				"haskell",
				"Set Syntax: Haskell"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"package control",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 339.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"import urllib.request,os; pf = ‘Package Control.sublime-package’; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), ‘wb’).write(urllib.request.urlopen( ‘http://sublime.wbond.net/’ + pf.replace(‘ ‘,’%20′)).read())",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/mind-s/Documents/GitHub/LR2_Assistant/Model/FromHPtoAllPlayerData.hs",
		"/C/Users/mind-s/Documents/GitHub/LR2_Assistant/Model/FromHPtoClearCount.hs",
		"/C/Users/mind-s/Documents/GitHub/LR2_Assistant/Model/MusicDataParser.hs",
		"/C/Users/mind-s/Documents/GitHub/LR2_Assistant/Model/FromDatatoHTML.hs",
		"/C/Users/mind-s/Documents/GitHub/LR2_Assistant/Model/CalcRankingPoint.hs",
		"/C/Users/mind-s/Documents/GitHub/DesignPattern/TemplateMethod.hs",
		"/C/Users/mind-s/Documents/GitHub/LR2_Assistant/Model/FromHPtoAllPlayerData.bat",
		"/C/Users/mind-s/Documents/GitHub/tool/bmsAnalysis/BmsAnalysis.hs",
		"/C/Users/mind-s/Desktop/bms_sara_ClearData/bms_sara_ClearData1.html",
		"/C/Users/mind-s/Desktop/__jquery.tablesorter/themes/green/style1.css",
		"/C/Users/mind-s/Documents/GitHub/LR2_Assistant/Model/FromBmsDatatoHTML.hs",
		"/C/Users/mind-s/Desktop/__jquery.tablesorter/themes/green/style.css",
		"/C/Users/mind-s/Documents/GitHub/tool/bmsAnalysis/Bmsparser.hs",
		"/C/Users/mind-s/AppData/Roaming/Sublime Text 3/Packages/SublimeHaskell/Settings/SublimeHaskell.sublime-settings",
		"/C/Users/mind-s/AppData/Roaming/Sublime Text 3/Packages/SublimeHaskell/ModuleInspector.hs",
		"/C/Users/mind-s/Documents/GitHub/LR_SaraTableClearCount/Model/FromHPtoClearCount.hs",
		"/C/Users/mind-s/Documents/GitHub/LR_SaraTableClearCount/Model/MusicDataParser.hs",
		"/C/Users/mind-s/Documents/GitHub/tool/bmsAnalysis/ConvertALLSCR.hs",
		"/C/Users/mind-s/Documents/GitHub/LR2_Assistant/Model/FromBmsDatatoHTML_build.bat",
		"/C/Users/mind-s/Desktop/bmsDataTable/bms_sara_data_clear.html",
		"/C/Users/mind-s/Documents/GitHub/LR2_Assistant/Model/FromHPtoData.hs",
		"/C/Users/mind-s/Documents/GitHub/tool/bmsAnalysis/bmsAnalysis.hs",
		"/C/Users/mind-s/Documents/GitHub/LR2_Assistant/Model/Main.hs",
		"/C/Users/mind-s/Documents/GitHub/tool/bmsAnalysis/    Not in scope",
		"/C/Users/mind-s/Documents/GitHub/tool/bmsAnalysis/    In an equation for `getScrLaneListHead'",
		"/C/Users/mind-s/Documents/GitHub/tool/bmsAnalysis/      Actual type",
		"/C/Users/mind-s/Documents/GitHub/tool/bmsAnalysis/    Expected type",
		"/C/Users/mind-s/Documents/GitHub/DesignPattern/Factory.hs",
		"/C/Users/mind-s/Documents/GitHub/DesignPattern/FactoryMethod.hs",
		"/C/Users/mind-s/AppData/Roaming/Sublime Text 3/Packages/User/Default.sublime-keymap",
		"/C/Users/mind-s/AppData/Roaming/Sublime Text 3/Packages/SublimeHaskell/Keymaps/Default.sublime-keymap",
		"/C/Users/mind-s/AppData/Roaming/Sublime Text 3/Packages/User/SublimeHaskell.sublime-settings",
		"/C/Users/mind-s/Desktop/bms_sara.html",
		"/C/haskell/test.hs",
		"/C/Users/mind-s/Documents/GitHub/LR2_Assistant/Model/DBControll.hs",
		"/C/Users/mind-s/Documents/GitHub/LR2_Assistant/Model/mojicode.hs",
		"/C/Users/mind-s/Desktop/cinnamon-0.2/Cinnamon/Ucs.hs",
		"/C/Users/mind-s/Desktop/cinnamon-0.2/Cinnamon.hs",
		"/C/Users/mind-s/Desktop/cinnamon-0.2/Cinnamon/Misc.hs",
		"/C/Users/mind-s/Documents/GitHub/LR2_Assistant/Model/main.hs",
		"/C/Users/mind-s/Documents/GitHub/LR2_Assistant/Model/musicDataParser.hs",
		"/C/Users/mind-s/Documents/GitHub/LR2_Assistant/Model/testParse.hs",
		"/C/Users/mind-s/AppData/Roaming/Sublime Text 3/Packages/SublimeREPL/SublimeREPL.sublime-settings",
		"/C/Users/mind-s/AppData/Roaming/Sublime Text 3/Packages/User/SublimeREPL.sublime-settings",
		"/C/Users/mind-s/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/C/Users/mind-s/AppData/Roaming/Sublime Text 3/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/mind-s/AppData/Roaming/Sublime Text 3/Packages/User/Haskell.sublime-settings"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"ScratchSkillPtRanking",
			"convertDatas",
			"map",
			"length",
			"filter",
			"\n",
			"PlayerData",
			"convertDatas",
			"getMusicClearStatus",
			"pGetClearStatus",
			"head",
			"getPlayerCntFromIRSite",
			"pGetPlayerMDataInfos",
			"pPlayerMusicDataInfos",
			"pReadLineIRSite",
			"getPlayerMusicDataInfoFromIRSite",
			"getMusicClearStatus",
			"pGetClearStatus",
			"pPlayerDataBeginStr",
			"getMusicClearStatus",
			"head",
			"MusicData",
			"PlayerMusicDataInfo",
			"PlayerData",
			"PlayerMusicDataInfo",
			"PlayerData",
			"getPlayerCntFromIRSite",
			"defVarMNameStr",
			"pGetPlayerMDataInfos",
			"getPlayerMusicDataInfoFromIRSite",
			"pReadLine",
			"formatMusicData",
			"Htmltag",
			"black'>ID</font></th>\n			<th align=\"center\"><font color='black'>◎</font></th>\n			<th align=\"center\"><font color='black'>music title</font></th>\n			<th align=\"center\"><font color='black'>FC Rate</font></th>\n			<th align=\"center\"><font color='black'>Hard Rate</font></th>\n			<th align=\"center\"><font color='black'>Clear Rate</font></th>\n			<th align=\"center\"><font color='black'>FC</font></th>\n			<th align=\"center\"><font color='black'>Hard</font></th>\n			<th align=\"center\"><font color='black'>Normal</font></th>\n			<th align=\"center\"><font color='black'>Easy</font></th>\n			<th align=\"center\"><font color='black'>Failed</font></th>\n			<th align=\"center\"><font color='black'>Player</font></th>\n		</tr>",
			"read",
			"try",
			"end",
			"getTotalValue",
			"getMainDataField",
			"getObjs",
			"getKId",
			"mainDataStr",
			"mainDataFieldStartStr",
			"getMainDataField",
			"convObjs",
			"chunk",
			"pHtmlTag",
			"pHtmlColorTag",
			"pGetInfo",
			"pLevelHtmlTag",
			"pLevel",
			"font color",
			"formatMusicData",
			"take",
			"formatMusicData",
			"getMusicDatas",
			"convAllScr",
			"pHFData",
			"T.",
			"T.Text",
			"Prelude",
			"\" ",
			"showComma",
			"PTuple"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"Text",
			"L"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "FromHPtoSSPtData.hs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3278,
						"regions":
						{
						},
						"selection":
						[
							[
								2717,
								2717
							]
						],
						"settings":
						{
							"origin_encoding": "UTF-8",
							"syntax": "Packages/SublimeHaskell/Syntaxes/Haskell-SublimeHaskell.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1257.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "MusicDataParser.hs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17856,
						"regions":
						{
						},
						"selection":
						[
							[
								15916,
								15916
							]
						],
						"settings":
						{
							"origin_encoding": "UTF-8",
							"syntax": "Packages/SublimeHaskell/Syntaxes/Haskell-SublimeHaskell.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12455.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 31.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.679998953097,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 205.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.haskell_error_checker":
	{
		"height": 465.0
	},
	"output.haskell_sublime_load":
	{
		"height": 332.0
	},
	"project": "",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
